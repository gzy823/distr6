% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/SDistribution_LogLogistic.R
\name{LogLogistic}
\alias{LogLogistic}
\title{Log-Logistic Distribution}
\description{
Mathematical and statistical functions for the Log-Logistic distribution parameterised
with shape, scale and location, and defined by the pdf
\deqn{f(x) = (\beta/\alpha)((x-\gamma)/\alpha)^{\beta-1}(1 + ((x-\gamma)/\alpha)^\beta)^{-2}}
where \eqn{\beta > 0} is the shape parameter, \eqn{\alpha > 0} is the scale parameter and
\eqn{\gamma >= 0} is the location parameter.
}
\details{
One of the difficulties in the log-logistic distribution is that there is little concensus
online about the most common parameterisation and indeed often these are incorrectly conflated. We
have therefore only included one parameterisation, which is in-line with McLaughlin's Compendium (2016).

Entropy, mgf and cf are omitted as no closed form analytic expression could be found.
}
\section{Constructor}{
 LogLogistic$new(scale = 1, shape = 1, location = 0, decorators = NULL, verbose = FALSE)
}

\section{Constructor Arguments}{

\tabular{lll}{
\strong{Argument} \tab \strong{Type} \tab \strong{Details} \cr
\code{shape} \tab numeric \tab shape parameter. \cr
\code{scale} \tab numeric \tab scale parameter. \cr
\code{location} \tab numeric \tab location parameter. \cr
\code{decorators} \tab Decorator \tab decorators to add functionality. \cr
\code{verbose} \tab logical \tab if TRUE parameterisation messages produced.
}
}

\section{Constructor Details}{
 The LogLogistic distribution is parameterised by default with
shape = 1, scale = 1 and location = 0.
}

\section{Public Variables}{

 \tabular{ll}{
  \strong{Method} \tab \strong{Return} \cr
  \code{name} \tab Name of distribution. \cr
  \code{short_name} \tab Id of distribution. \cr
  \code{description} \tab Brief description of distribution. \cr
  \code{traits} \tab List: type, valueSupport, variateForm. \cr
  \code{package} \tab The package p/d/q/r are implemented in.
 }
}

\section{Public Methods}{

 \tabular{ll}{
  \strong{Accessor Methods} \tab \strong{Link} \cr
  \code{decorators()} \tab \code{\link{decorators}} \cr
  \code{valueSupport()} \tab \code{\link{valueSupport}} \cr
  \code{variateForm()} \tab \code{\link{variateForm}} \cr
  \code{type()} \tab \code{\link{type}} \cr
  \code{properties()} \tab \code{\link{properties}} \cr
  \code{support()} \tab \code{\link{support}} \cr
  \code{distrDomain()} \tab \code{\link{distrDomain}} \cr
  \code{symmetry()} \tab \code{\link{symmetry}} \cr
  \code{sup()}  \tab \code{\link{sup}} \cr
  \code{inf()} \tab \code{\link{inf}} \cr
  \code{dmax()}  \tab \code{\link{dmax}} \cr
  \code{dmin()} \tab \code{\link{dmin}} \cr
  \code{skewnessType()} \tab \code{\link{skewnessType}} \cr
  \code{kurtosisType()} \tab \code{\link{kurtosisType}} \cr

  \tab \cr \tab \cr \tab \cr

  \strong{Statistical Methods} \tab \strong{Link} \cr
  \code{pdf(x1, ..., log = FALSE, simplify = TRUE)} \tab \code{\link{pdf}} \cr
  \code{cdf(x1, ..., lower.tail = TRUE, log.p = FALSE, simplify = TRUE)} \tab \code{\link{cdf}}\cr
  \code{quantile(p, ..., lower.tail = TRUE, log.p = FALSE, simplify = TRUE)} \tab \code{\link{quantile.Distribution}} \cr
  \code{rand(n, simplify = TRUE)} \tab \code{\link{rand}} \cr
  \code{mean()} \tab \code{\link{mean.Distribution}} \cr
  \code{var()} \tab \code{\link{var}} \cr
  \code{prec()} \tab \code{\link{prec}} \cr
  \code{cor()} \tab \code{\link{cor}} \cr
  \code{skewness()} \tab \code{\link{skewness}} \cr
  \code{kurtosis(excess = TRUE)} \tab \code{\link{kurtosis}} \cr
  \code{entropy(base = 2)} \tab \code{\link{entropy}} \cr
  \code{mgf(t)} \tab \code{\link{mgf}} \cr
  \code{cf(t)} \tab \code{\link{cf}} \cr
  \code{pgf(z)} \tab \code{\link{pgf}} \cr
  \code{sd()} \tab \code{\link{sd}} \cr
  \code{median()} \tab \code{\link{median.Distribution}} \cr
  \code{iqr()} \tab \code{\link{iqr}} \cr

  \tab \cr \tab \cr \tab \cr

  \strong{Parameter Methods} \tab \strong{Link} \cr
  \code{parameters(id)} \tab \code{\link{parameters}} \cr
  \code{getParameterValue(id, error = "warn")}  \tab \code{\link{getParameterValue}} \cr
  \code{setParameterValue(lst, error = "warn")} \tab \code{\link{setParameterValue}} \cr

  \tab \cr \tab \cr \tab \cr

  \strong{Validation Methods} \tab \strong{Link} \cr
  \code{liesInSupport(x, all = TRUE, bound = FALSE)} \tab \code{\link{liesInSupport}} \cr
  \code{liesInType(x, all = TRUE)} \tab \code{\link{liesInType}} \cr
  \code{liesInDistrDomain(x, all = TRUE)} \tab \code{\link{liesInDistrDomain}} \cr

  \tab \cr \tab \cr \tab \cr

  \strong{Representation Methods} \tab \strong{Link} \cr
  \code{strprint()} \tab \code{\link{strprint}} \cr
  \code{print()} \tab \code{\link[base]{print}} \cr
  \code{summary(full = T)} \tab \code{\link{summary.Distribution}} \cr
  \code{plot()} \tab Coming Soon. \cr
  \code{qqplot()} \tab Coming Soon. \cr
  }
}

\examples{
x <- LogLogistic$new(shape = 2, scale = 3)

# Update parameters
x$setParameterValue(list(scale = 2))
x$parameters()

# p/d/q/r
x$pdf(5:6)
x$cdf(5)
x$quantile(0.42)
x$rand(4)

# Statistics
x$mean()
x$var()

summary(x)

}
\references{
McLaughlin, M. P. (2016). Compendium of Common Probability Distributions.
}
