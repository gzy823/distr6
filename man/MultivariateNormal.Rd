% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/SDistribution_MultivariateNormal.R
\name{MultivariateNormal}
\alias{MultivariateNormal}
\title{MultivariateNormal Distribution}
\description{
Mathematical and statistical functions for the MultivariateNormal distribution parameterised
with mean and cov or \eqn{prec = cov^{-1}}. The mean-cov parameterisation is defined by the pdf,
\deqn{f(x) = (2 * \pi)^{-k/2}det(\Sigma)^{-1/2}exp(-1/2(x-\mu)^T\Sigma^{-1}(x-\mu))}
where \eqn{x} is a k-vector to evaluate the distribution at, \eqn{\mu} is the mean k-vector and
\eqn{\Sigma} is the covariance matrix; the pdf exists only when \eqn{\Sigma} is positive semi-definite.
}
\details{
The MultivariateNormal is constructed with a mean and covariance or precision.
The parameter \code{K} is automatically updated by counting the length of the mean vector,
once constructed this cannot be changed. If a \code{mean} vector of length greater than K is
given then this is truncated to the correct length. If a \code{mean} vector of length less than K
is given then this replicated and truncated to the correct length. Sampling is performed via the
Cholesky decomposition. \code{cdf}, \code{quantile}, \code{skewness} and \code{kurtosis} are omitted
as no closed form analytic expression could be found.
}
\section{Constructor}{
 MultivariateNormal$new(mean = rep(0,2), cov = c(1,0,0,1),
prec = NULL, decorators = NULL, verbose = FALSE)
}

\section{Constructor Arguments}{

\tabular{lll}{
\strong{Argument} \tab \strong{Type} \tab \strong{Details} \cr
\code{mean} \tab numeric \tab vector of means. \cr
\code{cov} \tab numeric \tab vector or matrix. See details. \cr
\code{prec} \tab numeric \tab vector or matrix. See details. \cr
\code{decorators} \tab Decorator \tab decorators to add functionality. See details. \cr
\code{verbose} \tab logical \tab if TRUE parameterisation messages produced.
}
}

\section{Constructor Details}{
 The covariance matrix can either be supplied as a matrix or as a
vector that can be printed via \code{matrix(cov, nrow = K, byrow = FALSE)}.
}

\section{Public Variables}{

 \tabular{ll}{
  \strong{Method} \tab \strong{Return} \cr
  \code{name} \tab Name of distribution. \cr
  \code{short_name} \tab Id of distribution. \cr
  \code{description} \tab Brief description of distribution. \cr
  \code{traits} \tab List: type, valueSupport, variateForm. \cr
  \code{package} \tab The package p/d/q/r are implemented in.
 }
}

\section{Public Methods}{

 \tabular{ll}{
  \strong{Accessor Methods} \tab \strong{Link} \cr
  \code{decorators()} \tab \code{\link{decorators}} \cr
  \code{valueSupport()} \tab \code{\link{valueSupport}} \cr
  \code{variateForm()} \tab \code{\link{variateForm}} \cr
  \code{type()} \tab \code{\link{type}} \cr
  \code{properties()} \tab \code{\link{properties}} \cr
  \code{support()} \tab \code{\link{support}} \cr
  \code{distrDomain()} \tab \code{\link{distrDomain}} \cr
  \code{symmetry()} \tab \code{\link{symmetry}} \cr
  \code{sup()}  \tab \code{\link{sup}} \cr
  \code{inf()} \tab \code{\link{inf}} \cr
  \code{dmax()}  \tab \code{\link{dmax}} \cr
  \code{dmin()} \tab \code{\link{dmin}} \cr
  \code{skewnessType()} \tab \code{\link{skewnessType}} \cr
  \code{kurtosisType()} \tab \code{\link{kurtosisType}} \cr

  \tab \cr \tab \cr \tab \cr

  \strong{Statistical Methods} \tab \strong{Link} \cr
  \code{pdf(x1, ..., log = FALSE, simplify = TRUE)} \tab \code{\link{pdf}} \cr
  \code{cdf(x1, ..., lower.tail = TRUE, log.p = FALSE, simplify = TRUE)} \tab \code{\link{cdf}}\cr
  \code{quantile(p, ..., lower.tail = TRUE, log.p = FALSE, simplify = TRUE)} \tab \code{\link{quantile.Distribution}} \cr
  \code{rand(n, simplify = TRUE)} \tab \code{\link{rand}} \cr
  \code{mean()} \tab \code{\link{mean.Distribution}} \cr
  \code{var()} \tab \code{\link{var}} \cr
  \code{prec()} \tab \code{\link{prec}} \cr
  \code{cor()} \tab \code{\link{cor}} \cr
  \code{skewness()} \tab \code{\link{skewness}} \cr
  \code{kurtosis(excess = TRUE)} \tab \code{\link{kurtosis}} \cr
  \code{entropy(base = 2)} \tab \code{\link{entropy}} \cr
  \code{mgf(t)} \tab \code{\link{mgf}} \cr
  \code{cf(t)} \tab \code{\link{cf}} \cr
  \code{pgf(z)} \tab \code{\link{pgf}} \cr
  \code{sd()} \tab \code{\link{sd}} \cr
  \code{median()} \tab \code{\link{median.Distribution}} \cr
  \code{iqr()} \tab \code{\link{iqr}} \cr

  \tab \cr \tab \cr \tab \cr

  \strong{Parameter Methods} \tab \strong{Link} \cr
  \code{parameters(id)} \tab \code{\link{parameters}} \cr
  \code{getParameterValue(id, error = "warn")}  \tab \code{\link{getParameterValue}} \cr
  \code{setParameterValue(lst, error = "warn")} \tab \code{\link{setParameterValue}} \cr

  \tab \cr \tab \cr \tab \cr

  \strong{Validation Methods} \tab \strong{Link} \cr
  \code{liesInSupport(x, all = TRUE, bound = FALSE)} \tab \code{\link{liesInSupport}} \cr
  \code{liesInType(x, all = TRUE)} \tab \code{\link{liesInType}} \cr
  \code{liesInDistrDomain(x, all = TRUE)} \tab \code{\link{liesInDistrDomain}} \cr

  \tab \cr \tab \cr \tab \cr

  \strong{Representation Methods} \tab \strong{Link} \cr
  \code{strprint()} \tab \code{\link{strprint}} \cr
  \code{print()} \tab \code{\link[base]{print}} \cr
  \code{summary(full = T)} \tab \code{\link{summary.Distribution}} \cr
  \code{plot()} \tab Coming Soon. \cr
  \code{qqplot()} \tab Coming Soon. \cr
  }
}

\examples{
# Different parameterisations
MultivariateNormal$new(mean = c(0,0,0), cov = matrix(c(3,-1,-1,-1,1,0,-1,0,1), byrow=TRUE,nrow=3))
MultivariateNormal$new(mean = c(0,0,0), cov = c(3,-1,-1,-1,1,0,-1,0,1)) # Equivalently
MultivariateNormal$new(mean = c(0,0,0), prec = c(3,-1,-1,-1,1,0,-1,0,1))

x <- MultivariateNormal$new() # Default is bivariate standard normal

# Update parameters
x$setParameterValue(list(mean = c(1, 2)))
x$setParameterValue(list(prec = c(1,0,0,1))) # When any parameter is updated, all others are too!
x$parameters()

# p/d/q/r
# Note the difference from R stats
x$pdf(1, 2)
# This allows vectorisation:
x$pdf(1:3, 2:4)
x$rand(4)

# Statistics
x$mean()
x$var()

summary(x)

}
